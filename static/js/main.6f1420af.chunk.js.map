{"version":3,"sources":["Header.js","Context.js","ContactLayOut.js","Contacts.js","Dry.js","Form.js","About.js","Notfound.js","Test.js","EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Header","_ref","brand","react_default","a","createElement","className","href","Link","to","Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_this2","axios","get","then","res","data","props","children","Component","Consumer","contactlayout","toggle","onToggle","onDelete","delete","_this$props$contact","name","email","phone","style","cursor","onClick","float","bind","ContactLayOut","Dry","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","form","errors","e","defineProperty","target","onSubmit","preventDefault","_this$state","newContact","post","history","push","_this$state2","src_Dry","About","Notfound","Test","title","completed","editcontact","_callee","UpdateContacts","regenerator_default","wrap","_context","prev","next","abrupt","match","params","put","sent","stop","App","Context_Provider","HashRouter","src_Header","Switch","Route","exact","path","component","Form","Contacts","Editcontact","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"iRA2BeA,EAxBA,SAAAC,GAAa,IAAXC,EAAWD,EAAXC,MACf,OACCC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uDACbH,EAAAC,EAAAC,cAAA,KAAGE,KAAK,IAAID,UAAU,0BAA0BJ,EAAMC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mCACnEH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACVH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gCACbH,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,IAAIH,UAAU,yBACvBH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eADb,UAGDH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gCACdH,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,gBAAgBH,UAAU,yBACnCH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eADb,cAGAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gCACdH,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,SAASH,UAAU,yBAC5BH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mBADb,gDCfPI,EAAUC,IAAMC,gBAEhBC,EAAU,SAACC,EAAOC,GACrB,OAAOA,EAAOC,MACZ,IAAK,iBACL,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEIK,SAAUL,EAAMK,SAASC,OAAO,SAACC,GAC7B,OAAOA,EAAQC,KAAOP,EAAOQ,YAGrC,IAAK,cACL,OAAON,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEIK,SAAQ,CAAGJ,EAAOQ,SAAVC,OAAAP,OAAAQ,EAAA,EAAAR,CAAsBH,EAAMK,aAExC,IAAK,iBACL,OAAOF,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEIK,SAAUL,EAAMK,SAASO,IACrB,SAAAL,GAAO,OACRA,EAAQC,KAAOP,EAAOQ,QAAQD,GAC3BD,EAAUN,EAAOQ,QAClBF,MAGT,QAAS,OAAOP,IAIRa,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAb,OAAAc,EAAA,EAAAd,CAAAe,KAAAL,GAAA,QAAAM,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAR,EAAAb,OAAAsB,EAAA,EAAAtB,CAAAe,MAAAH,EAAAZ,OAAAuB,EAAA,EAAAvB,CAAAU,IAAAc,KAAAC,MAAAb,EAAA,CAAAG,MAAAR,OAAAY,MACGtB,MAAQ,CACJK,SAAU,GACTwB,SAAU,SAAA5B,GAAM,OAAIe,EAAKc,SAAS,SAAA9B,GAAK,OAAID,EAAQC,EAAOC,OAHlEe,EAAA,OAAAb,OAAA4B,EAAA,EAAA5B,CAAAU,EAAAC,GAAAX,OAAA6B,EAAA,EAAA7B,CAAAU,EAAA,EAAAoB,IAAA,oBAAAC,MAAA,WAOuB,IAAAC,EAAAjB,KACfkB,IAAMC,IAAI,8CACTC,KAAK,SAAAC,GAAG,OAAIJ,EAAKL,SAAS,CACvBzB,SAAUkC,EAAIC,WAV1B,CAAAP,IAAA,SAAAC,MAAA,WAgBQ,OACI7C,EAAAC,EAAAC,cAACK,EAAQiB,SAAT,CAAkBqB,MAAOhB,KAAKlB,OACzBkB,KAAKuB,MAAMC,cAlB5B7B,EAAA,CAA8B8B,aAwBjBC,EAAWhD,EAAQgD,SCEjBC,6MApDX7C,MAAQ,CACJ8C,QAAQ,KAGXC,SAAW,WACR/B,EAAKc,SAAS,CACVgB,QAAS9B,EAAKhB,MAAM8C,YAI3BE,SAAW,SAACxC,EAAIqB,GACZO,IAAMa,OAAN,8CAAAvC,OAA2DF,IAC1D8B,KAAK,SAAAC,GAAG,OAAIV,EAAS,CAAC3B,KAAM,iBAAkBO,QAASD,+EAGpD,IAAA2B,EAAAjB,KAAAgC,EAC4BhC,KAAKuB,MAAMlC,QAArCC,EADF0C,EACE1C,GAAI2C,EADND,EACMC,KAAMC,EADZF,EACYE,MAAOC,EADnBH,EACmBG,MACjBP,EAAU5B,KAAKlB,MAAf8C,OAEL,OACIzD,EAAAC,EAAAC,cAACqD,EAAD,KACK,SAAAV,GAAS,IACCL,EAAYK,EAAZL,SACP,OACFxC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAe2D,EAC7B9D,EAAAC,EAAAC,cAAA,KAAGC,UAAU,uBACZ8D,MAAO,CAACC,OAAO,WAChBC,QAASrB,EAAKY,WACd1D,EAAAC,EAAAC,cAAA,KAAGC,UAAU,0BAA0B8D,MAAO,CAACG,MAAM,QAASF,OAAO,WACrEC,QAASrB,EAAKa,SAASU,KAAKvB,EAAM3B,EAAIqB,KACtCxC,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAE,sBAAAe,OAAwBF,IAChCnB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mCAAmC8D,MAAO,CAACG,MAAM,QAASF,OAAO,eAG5ET,EACFzD,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACdH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,UAAwC4D,GACxC/D,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,UAAwC6D,IAEpC,eAzCAV,aCyBbtC,6MA1BXL,MAAQ,2EAGJ,OACIX,EAAAC,EAAAC,cAACqD,EAAD,KACK,SAAAV,GAAS,IACC7B,EAAY6B,EAAZ7B,SACP,OACEhB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,uBAAd,UACAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAhB,SAECa,EAASO,IAAI,SAACL,GACd,OAAOlB,EAAAC,EAAAC,cAACoE,EAAD,CACF1B,IAAK1B,EAAQC,GACbD,QAASA,gBAhBlBoC,sCCAjBiB,EAAM,SAAAzE,GASN,IARF0E,EAQE1E,EARF0E,MACA3D,EAOEf,EAPFe,KACAiD,EAMEhE,EANFgE,KACAW,EAKE3E,EALF2E,YACA5B,EAIE/C,EAJF+C,MACA6B,EAGE5E,EAHF4E,SACAC,EAEE7E,EAFF6E,MAGF,OACE3E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SAAO0E,QAASJ,GAAQA,GACxBxE,EAAAC,EAAAC,cAAA,SACAW,KAAMA,EACNiD,KAAMA,EACN3D,UAAW0E,IAAW,+BAAgC,CAClDC,aAAcH,IAElBF,YAAaA,EACb5B,MAAOA,EACP6B,SAAUA,IAETC,GAAS3E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAoBwE,KAerDJ,EAAIQ,aAAe,CACflE,KAAM,QAGK0D,QCmEAS,6MA3GTrE,MAAQ,CACJmD,KAAM,GACNC,MAAO,GACPC,MAAO,GACPiB,OAAQ,MAGXP,SAAW,SAACQ,GACXvD,EAAKc,SAAL3B,OAAAqE,EAAA,EAAArE,CAAA,GAAiBoE,EAAEE,OAAOtB,KAAOoB,EAAEE,OAAOvC,WAG3CwC,SAAW,SAAC7C,EAAU0C,GACrBA,EAAEI,iBADyB,IAAAC,EAGE5D,EAAKhB,MAA3BmD,EAHoByB,EAGpBzB,KAAMC,EAHcwB,EAGdxB,MAAOC,EAHOuB,EAGPvB,MAGpB,GAAY,KAATF,EAIH,GAAa,KAAVC,EAIH,GAAa,KAAVC,EAAH,CAOA,IAAMwB,EAAa,CACf1B,OACAC,QACAC,SAGJjB,IAAM0C,KAAK,6CAA8CD,GACxDvC,KAAK,SAAAC,GAAG,OAAIV,EAAS,CAAC3B,KAAM,cAAeO,QAAS8B,EAAIC,SAGzDxB,EAAKc,SAAS,CACVqB,KAAM,GACNC,MAAO,GACPC,MAAO,GACPiB,OAAQ,KAKZtD,EAAKyB,MAAMsC,QAAQC,KAAK,sBAzBpBhE,EAAKc,SAAS,CAAEwC,OAAQ,CAACjB,MAAO,4BAJhCrC,EAAKc,SAAS,CAAEwC,OAAQ,CAAClB,MAAO,4BAJhCpC,EAAKc,SAAS,CAAEwC,OAAQ,CAACnB,KAAM,+FAqC9B,IAAAhB,EAAAjB,KAAA+D,EACgC/D,KAAKlB,MAAnCmD,EADF8B,EACE9B,KAAMC,EADR6B,EACQ7B,MAAOC,EADf4B,EACe5B,MAAOiB,EADtBW,EACsBX,OAC3B,OACIjF,EAAAC,EAAAC,cAACqD,EAAD,KACK,SAAAV,GAAS,IACCL,EAAYK,EAAZL,SACP,OACXxC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACVH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,8BAAd,kBACCH,EAAAC,EAAAC,cAAA,QAAMmF,SAAUvC,EAAKuC,SAAShB,KAAKvB,EAAMN,IACrCxC,EAAAC,EAAAC,cAAC2F,EAAD,CACIrB,MAAM,OACNV,KAAK,OACL3D,UAAU,+BACVsE,YAAY,aACZ5B,MAAOiB,EACPY,SAAU5B,EAAK4B,SACfC,MAAOM,EAAOnB,OAElB9D,EAAAC,EAAAC,cAAC2F,EAAD,CACIrB,MAAM,QACN3D,KAAK,QACLiD,KAAK,QACL3D,UAAU,+BACVsE,YAAY,cACZ5B,MAAOkB,EACPW,SAAU5B,EAAK4B,SACfC,MAAOM,EAAOlB,QAElB/D,EAAAC,EAAAC,cAAC2F,EAAD,CACIrB,MAAM,QACNV,KAAK,QACL3D,UAAU,+BACVsE,YAAY,cACZ5B,MAAOmB,EACPU,SAAU5B,EAAK4B,SACfC,MAAOM,EAAOjB,QAElBhE,EAAAC,EAAAC,cAAA,SAAOW,KAAK,SAASgC,MAAM,SAAS1C,UAAU,8CAhGtDmD,aCHJ,SAASwC,IACtB,OACE9F,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,yBAAd,aACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,qKACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAb,6BCLS,SAAS4F,IACtB,OACE/F,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,wBACCH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,yBCkBQ6F,6MArBVrF,MAAQ,CACJQ,GAAI,GACJ8E,MAAO,GACPC,UAAW,4EAKT,IAAAX,EAC0B1D,KAAKlB,MAA7BQ,EADFoE,EACEpE,GAAI8E,EADNV,EACMU,MAAOC,EADbX,EACaW,UACpB,OACElG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,+BACCF,EAAAC,EAAAC,cAAA,qBAAa+F,GACZjG,EAAAC,EAAAC,cAAA,iBAASiB,GACRnB,EAAAC,EAAAC,cAAA,qBAAagG,WAhBL5C,sCC8HJ6C,6MA1HTxF,MAAQ,CACJmD,KAAM,GACNC,MAAO,GACPC,MAAO,GACPiB,OAAQ,MAeXP,SAAW,SAACQ,GACXvD,EAAKc,SAAL3B,OAAAqE,EAAA,EAAArE,CAAA,GAAiBoE,EAAEE,OAAOtB,KAAOoB,EAAEE,OAAOvC,WAG3CwC,+CAAW,SAAAe,EAAO5D,EAAU0C,GAAjB,IAAAK,EAAAzB,EAAAC,EAAAC,EAAA7C,EAAAkF,EAAAnD,EAAA,OAAAoD,EAAArG,EAAAsG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACVxB,EAAEI,iBADQC,EAGmB5D,EAAKhB,MAA3BmD,EAHGyB,EAGHzB,KAAMC,EAHHwB,EAGGxB,MAAOC,EAHVuB,EAGUvB,MAGR,KAATF,EANO,CAAA0C,EAAAE,KAAA,eAON/E,EAAKc,SAAS,CAAEwC,OAAQ,CAACnB,KAAM,sBAPzB0C,EAAAG,OAAA,oBAUG,KAAV5C,EAVO,CAAAyC,EAAAE,KAAA,eAWN/E,EAAKc,SAAS,CAAEwC,OAAQ,CAAClB,MAAO,uBAX1ByC,EAAAG,OAAA,oBAcG,KAAV3C,EAdO,CAAAwC,EAAAE,KAAA,gBAeN/E,EAAKc,SAAS,CAAEwC,OAAQ,CAACjB,MAAO,uBAf1BwC,EAAAG,OAAA,yBAmBHxF,EAAMQ,EAAKyB,MAAMwD,MAAMC,OAAvB1F,GAEDkF,EAAiB,CACnBvC,OACAC,QACAC,SAxBMwC,EAAAE,KAAA,GA4BQ3D,IAAM+D,IAAN,8CAAAzF,OAAwDF,GAAMkF,GA5BtE,QA4BJnD,EA5BIsD,EAAAO,KA6BVvE,EAAS,CAAC3B,KAAM,iBAAkBO,QAAS8B,EAAIC,OAK/CxB,EAAKc,SAAS,CACVqB,KAAM,GACNC,MAAO,GACPC,MAAO,GACPiB,OAAQ,KAKZtD,EAAKyB,MAAMsC,QAAQC,KAAK,iBA3Cd,yBAAAa,EAAAQ,SAAAZ,EAAAvE,6QAfAV,EAAMU,KAAKuB,MAAMwD,MAAMC,OAAvB1F,YACQ4B,IAAMC,IAAN,8CAAA3B,OAAwDF,WAApE+B,SACAhC,EAAUgC,EAAIC,KAEpBtB,KAAKY,SAAS,CACTqB,KAAM5C,EAAQ4C,KACdC,MAAO7C,EAAQ6C,MACfC,MAAO9C,EAAQ8C,2IAuDf,IAAAlB,EAAAjB,KAAA+D,EACgC/D,KAAKlB,MAAnCmD,EADF8B,EACE9B,KAAMC,EADR6B,EACQ7B,MAAOC,EADf4B,EACe5B,MAAOiB,EADtBW,EACsBX,OAC3B,OACIjF,EAAAC,EAAAC,cAACqD,EAAD,KACK,SAAAV,GAAS,IACCL,EAAYK,EAAZL,SACP,OACXxC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACVH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,8BAAd,gBACCH,EAAAC,EAAAC,cAAA,QAAMmF,SAAUvC,EAAKuC,SAAShB,KAAKvB,EAAMN,IACrCxC,EAAAC,EAAAC,cAAC2F,EAAD,CACIrB,MAAM,OACNV,KAAK,OACL3D,UAAU,+BACVsE,YAAY,aACZ5B,MAAOiB,EACPY,SAAU5B,EAAK4B,SACfC,MAAOM,EAAOnB,OAElB9D,EAAAC,EAAAC,cAAC2F,EAAD,CACIrB,MAAM,QACN3D,KAAK,QACLiD,KAAK,QACL3D,UAAU,+BACVsE,YAAY,cACZ5B,MAAOkB,EACPW,SAAU5B,EAAK4B,SACfC,MAAOM,EAAOlB,QAElB/D,EAAAC,EAAAC,cAAC2F,EAAD,CACIrB,MAAM,QACNV,KAAK,QACL3D,UAAU,+BACVsE,YAAY,cACZ5B,MAAOmB,EACPU,SAAU5B,EAAK4B,SACfC,MAAOM,EAAOjB,QAElBhE,EAAAC,EAAAC,cAAA,SAAOW,KAAK,SAASgC,MAAM,iBAAiB1C,UAAU,6CA/GvDmD,aC+BX2D,mLAtBX,OACEjH,EAAAC,EAAAC,cAACgH,EAAD,KACAlH,EAAAC,EAAAC,cAACiH,EAAA,EAAD,KACAnH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACdH,EAAAC,EAAAC,cAACkH,EAAD,CAAQrH,MAAM,OACZC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAACmH,EAAA,EAAD,KACGrH,EAAAC,EAAAC,cAACoH,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWC,IACjC1H,EAAAC,EAAAC,cAACoH,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAW3B,IACtC9F,EAAAC,EAAAC,cAACoH,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,QAAQC,UAAWzB,IACrChG,EAAAC,EAAAC,cAACoH,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,gBAAgBC,UAAWE,IAC7C3H,EAAAC,EAAAC,cAACoH,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,yBAAyBC,UAAWG,IACtD5H,EAAAC,EAAAC,cAACoH,EAAA,EAAD,CAAOG,UAAW1B,gBAddzC,aCAEuE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASpB,MACvB,2DCZNqB,IAASC,OAAOlI,EAAAC,EAAAC,cAACiI,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMvF,KAAK,SAAAwF,GACjCA,EAAaC","file":"static/js/main.6f1420af.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst Header = ({brand}) => {\n  return (\n   <nav className=\"navbar navbar-expand-lg navbar-dark bg-light shadow\">\n     <a href=\"/\" className=\"navbar-brand text-info\">{brand}<i className=\"fa fa-group text-primary ml-2\"></i></a>\n     <div className=\"ml-auto\">\n         <ul className=\"navbar-nav\">\n             <li className=\"nav-list mr-2 text-uppercase\">\n              <Link to=\"/\" className=\"nav-link text-primary\">\n              <i className=\"fa fa-home\"></i> Home</Link>\n             </li>\n             <li className=\"nav-list mr-2 text-uppercase\">\n             <Link to=\"/contacts/add\" className=\"nav-link text-primary\">\n             <i className=\"fa fa-plus\"></i> Contacts</Link>\n             </li>\n             <li className=\"nav-list mr-2 text-uppercase\">\n             <Link to=\"/about\" className=\"nav-link text-primary\">\n             <i className=\"fa fa-question\"></i> About</Link>\n             </li>\n         </ul>\n     </div>\n   </nav>\n  )\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n   switch(action.type){\n     case 'DELETE_CONTACT':\n     return {\n         ...state,\n         contacts: state.contacts.filter((contact) => {\n             return contact.id !== action.payload;\n         })\n     }\n     case 'ADD_CONTACT':\n     return {\n         ...state,\n         contacts: [action.payload, ...state.contacts]\n     }\n     case 'UPDATE_CONTACT' :\n     return {\n         ...state,\n         contacts: state.contacts.map(\n             contact => \n            contact.id === action.payload.id \n            ? (contact = action.payload) \n            : contact\n         )\n     }\n     default: return state;\n   }\n}\n\nexport class Provider extends Component {\n   state = { \n       contacts: [],\n        dispatch: action => this.setState(state => reducer(state, action))\n    \n    }\n\n    componentDidMount(){\n        axios.get('https://jsonplaceholder.typicode.com/users')\n        .then(res => this.setState({\n            contacts: res.data\n        }))\n    }\n   \n   \n    render() { \n        return ( \n            <Context.Provider value={this.state}>\n                {this.props.children}\n            </Context.Provider>\n         );\n    }\n}\n\nexport const Consumer = Context.Consumer;\n \nexport default Provider;","import React, { Component } from 'react';\nimport {Consumer} from './Context';\nimport axios from 'axios'\nimport { Link } from 'react-router-dom';\n\n\nclass contactlayout extends Component {\n    state = { \n        toggle: false\n     }\n\n     onToggle = () => {\n        this.setState({\n            toggle: !this.state.toggle\n        })\n     }\n\n     onDelete = (id, dispatch) => {\n         axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`)\n         .then(res => dispatch({type: 'DELETE_CONTACT', payload: id}))\n     }\n\n    render() { \n        const {id, name, email, phone} = this.props.contact;\n        const {toggle} = this.state;\n\n          return(\n              <Consumer>\n                  {value => {\n                      const {dispatch} = value;\n                      return(\n                    <div className=\"card card-body mt-2 mb-3 shadow\">\n                        <h3 className=\"text-center\">{name}\n                        <i className=\"fa fa-sort-down ml-2\"\n                         style={{cursor:\"pointer\"}}\n                        onClick={this.onToggle}></i>\n                        <i className=\"fa fa-times text-danger\" style={{float:'right', cursor:\"pointer\"}}\n                        onClick={this.onDelete.bind(this, id, dispatch)}></i>\n                        <Link to={`/contacts/add/edit/${id}`}>\n                        <i className=\"fa fa-pencil text-secondary mr-2\" style={{float:'right', cursor:\"pointer\"}}></i>\n                        </Link>\n                        </h3>\n                        { toggle ? (\n                        <ul className=\"list-group\">\n                        <li className=\"list-group-item\">Email: {email}</li>\n                        <li className=\"list-group-item\">Phone: {phone}</li>\n                        </ul>\n                        ) : null\n\n                        }\n\n                    </div>\n                      )\n                  }}\n              </Consumer>\n          )\n    }\n}\n \nexport default contactlayout;","import React, { Component } from 'react';\nimport {Consumer} from './Context';\nimport Contactlayout from './ContactLayOut';\n\nclass contacts extends Component {\n    state = {  }\n    \n    render() { \n        return ( \n            <Consumer>\n                {value => {\n                    const {contacts} = value;\n                    return (\n                      <div>\n                          <h1 className=\"display-4 mt-2 mb-2\">Contact\n                          <span className=\"text-danger\">List</span>\n                          </h1>\n                          {contacts.map((contact) => {\n                           return <Contactlayout \n                                key={contact.id}\n                                contact={contact}\n                            />\n                          })}\n                      </div>\n                    )\n                }}\n            </Consumer>\n         );\n    }\n}\n \nexport default contacts;","import React from 'react'\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst Dry = ({\n    label,\n    type,\n    name,\n    placeholder,\n    value,\n    onChange,\n    error\n\n}) => {\n  return (\n    <div className=\"form-group\">\n        <label htmlFor={label}>{label}</label>\n        <input \n        type={type}\n        name={name}\n        className={classnames('form-control form-control-lg', {\n            'is-invalid': error\n        })} \n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n        />\n        {error && <div className=\"invalid-feedback\">{error}</div>}\n     </div>\n  )\n}\n\nDry.propTypes = {\n    label: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    placeholder: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    error: PropTypes.string\n}\n\nDry.defaultProps = {\n    type: 'text'\n}\n\nexport default Dry;","import React, { Component } from 'react';\nimport {Consumer} from './Context';\nimport Dry from './Dry';\nimport axios from 'axios';\n\nclass form extends Component {\n      state = { \n          name: '',\n          email: '',\n          phone: '',\n          errors: {}\n       }\n\n       onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value })\n       }\n\n       onSubmit = (dispatch, e) => {\n        e.preventDefault();\n        \n        const {name, email, phone} = this.state;\n\n        //validation\n        if(name === ''){\n            this.setState({ errors: {name: 'Name is required'}})\n            return;\n        }\n        if(email === ''){\n            this.setState({ errors: {email: 'Email is required'}})\n            return;\n        }\n        if(phone === ''){\n            this.setState({ errors: {phone: 'Phone is required'}})\n            return;\n        }\n        \n        \n        //create new contacts \n        const newContact = {\n            name, \n            email,\n            phone\n        }\n\n        axios.post('https://jsonplaceholder.typicode.com/users', newContact)\n        .then(res => dispatch({type: 'ADD_CONTACT', payload: res.data}) )\n\n        //clear feilds \n        this.setState({\n            name: '',\n            email: '',\n            phone: '',\n            errors: {}\n        })\n\n        //redirect \n\n        this.props.history.push(\"/contacts/add\")\n\n       }\n  \n    render() { \n        const {name, email, phone, errors} = this.state;\n        return ( \n            <Consumer>\n                {value => {\n                    const {dispatch} = value;\n                    return(\n         <div className=\"row\">\n              <div className=\"col-lg-6 col-sm-12 mx-auto\">\n                  <div className=\"card card-body shadow mt-2 mb-3\">\n                      <h3 className=\"text-center text-secondary\">Store Contacts</h3>\n                       <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                           <Dry \n                               label=\"Name\"\n                               name=\"name\"\n                               className=\"form-control form-control-lg\" \n                               placeholder=\"enter name\"\n                               value={name}\n                               onChange={this.onChange}\n                               error={errors.name}\n                           /> \n                           <Dry \n                               label=\"Email\"\n                               type=\"email\"\n                               name=\"email\"\n                               className=\"form-control form-control-lg\" \n                               placeholder=\"enter email\"\n                               value={email}\n                               onChange={this.onChange}\n                               error={errors.email}\n                           /> \n                           <Dry \n                               label='Phone'\n                               name=\"phone\"\n                               className=\"form-control form-control-lg\" \n                               placeholder=\"enter phone\"\n                               value={phone}\n                               onChange={this.onChange}\n                               error={errors.phone}\n                           /> \n                           <input type=\"submit\" value=\"Submit\" className=\" btn btn-success text-center\"/>\n                       </form>\n                  </div>\n              </div>\n        </div>\n                    )\n                }} \n            </Consumer>\n         );\n    }\n}\n \nexport default form;","import React from 'react'\n\nexport default function About() {\n  return (\n    <div>\n      <h4 className=\"text-danger display-4\">About Me!</h4>\n      <p className=\"lead\">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Repellat architecto porro ratione vitae odit. Consequatur, quasi incidunt. Voluptatibus, tempore? Quae?</p>\n      <p className=\"text-secondary\">copyright 2019 ver 1.0.2</p>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default function Notfound() {\n  return (\n    <div>\n      <h1 className=\"display-1\">404: Page Not Found </h1>\n       <p className=\"lead\">Please Try Again</p>\n    </div>\n  )\n}\n","import React, { Component } from 'react'\n\nclass Test extends Component {\n     state = {\n         id: '',\n         title: '',\n         completed: ''\n     }\n\n    \n\n  render() {\n      const {id, title, completed} = this.state;\n    return(\n      <div>\n        <h1>Testing Component</h1>\n         <h1> Title: {title}</h1>\n          <h3>ID: {id}</h3>\n           <h5>Status: {completed}</h5>\n      </div>\n    )\n  }\n}\n\nexport default Test","import React, { Component } from 'react';\nimport {Consumer} from './Context';\nimport Dry from './Dry';\nimport axios from 'axios';\n\nclass editcontact extends Component {\n      state = { \n          name: '',\n          email: '',\n          phone: '',\n          errors: {}\n       }\n         \n       async componentDidMount() {\n           const {id} = this.props.match.params;\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\n        const contact = res.data;\n\n        this.setState({\n             name: contact.name,\n             email: contact.email,\n             phone: contact.phone,\n        })\n    }\n\n       onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value })\n       }\n\n       onSubmit = async (dispatch, e) => {\n        e.preventDefault();\n        \n        const {name, email, phone} = this.state;\n\n        //validation\n        if(name === ''){\n            this.setState({ errors: {name: 'Name is required'}})\n            return;\n        }\n        if(email === ''){\n            this.setState({ errors: {email: 'Email is required'}})\n            return;\n        }\n        if(phone === ''){\n            this.setState({ errors: {phone: 'Phone is required'}})\n            return;\n        }\n\n        const {id} = this.props.match.params;\n\n        const UpdateContacts = {\n            name, \n            email,\n            phone\n        }\n       \n\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, UpdateContacts);\n        dispatch({type: 'UPDATE_CONTACT', payload: res.data });\n        \n    \n\n        //clear feilds \n        this.setState({\n            name: '',\n            email: '',\n            phone: '',\n            errors: {}\n        })\n\n        //redirect \n\n        this.props.history.push(\"/contacts/add\")\n\n       }\n  \n    render() { \n        const {name, email, phone, errors} = this.state;\n        return ( \n            <Consumer>\n                {value => {\n                    const {dispatch} = value;\n                    return(\n         <div className=\"row\">\n              <div className=\"col-lg-6 col-sm-12 mx-auto\">\n                  <div className=\"card card-body shadow mt-2 mb-3\">\n                      <h3 className=\"text-center text-secondary\">Edit Contact</h3>\n                       <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                           <Dry \n                               label=\"Name\"\n                               name=\"name\"\n                               className=\"form-control form-control-lg\" \n                               placeholder=\"enter name\"\n                               value={name}\n                               onChange={this.onChange}\n                               error={errors.name}\n                           /> \n                           <Dry \n                               label=\"Email\"\n                               type=\"email\"\n                               name=\"email\"\n                               className=\"form-control form-control-lg\" \n                               placeholder=\"enter email\"\n                               value={email}\n                               onChange={this.onChange}\n                               error={errors.email}\n                           /> \n                           <Dry \n                               label='Phone'\n                               name=\"phone\"\n                               className=\"form-control form-control-lg\" \n                               placeholder=\"enter phone\"\n                               value={phone}\n                               onChange={this.onChange}\n                               error={errors.phone}\n                           /> \n                           <input type=\"submit\" value=\"Update Contact\" className=\" btn btn-danger text-center\"/>\n                       </form>\n                  </div>\n              </div>\n        </div>\n                    )\n                }} \n            </Consumer>\n         );\n    }\n}\n \nexport default editcontact;","import React, { Component } from 'react';\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Header from './Header';\nimport { Provider } from './Context';\nimport Contacts from './Contacts';\nimport Form from './Form';\nimport About from './About';\nimport Notfound from './Notfound';\nimport Test from './Test';\nimport Editcontact from './EditContact';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n      <Router>\n      <div className=\"App\">\n       <Header brand=\"cL\" />\n         <div className=\"container\">\n           <Switch>\n              <Route exact path=\"/\" component={Form} />\n              <Route exact path=\"/about\" component={About} />\n              <Route exact path=\"/Test\" component={Test} />\n              <Route exact path=\"/contacts/add\" component={Contacts} />\n              <Route exact path=\"/contacts/add/edit/:id\" component={Editcontact} />\n              <Route component={Notfound} />\n           </Switch>\n         </div>\n      </div>\n      </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}